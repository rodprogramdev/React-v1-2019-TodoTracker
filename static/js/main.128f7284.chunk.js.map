{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.128f7284.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    \r\n    return <button onClick={onClick} style={{ backgroundColor:color}} className='btn'>{text}</button>\r\n    \r\n    \r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button\r\n\r\n","\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd  }) => {\r\n\r\n    // const onClick = () =>{\r\n    //     console.log('Click')\r\n    // }\r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h1> { title }</h1>\r\n            <Button color={showAdd ? 'red' : 'green' } text={showAdd ? 'CLOSE' : 'ADD TASK'} onClick={onAdd}/>\r\n\r\n\r\n         \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'To Do Tracker',\r\n}\r\n\r\nHeader.propTypes  = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// //CSS in JS\r\n// const headingStyle ={\r\n//     color: 'red', \r\n//     backgroundColor: 'Black',\r\n    \r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{ task.text } \r\n            <FaTimes style={{color:'red', cursor: 'pointer'}} \r\n            onClick=\r\n            {() => onDelete(task.id)}\r\n             /> \r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n        {tasks.map((task) => (\r\n        // <h3 key={task.id}>{task.text}</h3>\r\n        <Task key={task.id} task={task} \r\n          onDelete={onDelete} onToggle={onToggle}  />\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState} from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit =(e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        } \r\n\r\n        onAdd({ text, day, reminder })\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n      <form className='add-form' onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n            <label>To-do-item</label>\r\n            <input type='text' placeholder='Add Task'  value={text} onChange={(e) => setText(e.target.value)} /> \r\n        </div>\r\n        <div className='form-control'>\r\n            <label>Day and time</label>\r\n            <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)} /> \r\n        </div> \r\n        <div className='form-control form-control-check'>\r\n            <label>Set Reminder</label>\r\n            <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} /> \r\n        </div>\r\n\r\n        <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState (false)\n\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Morning Coffee',\n        day: 'Feb 4, 2021 at 7:00a.m.',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: '100 days of Code',\n        day: 'Feb 4, 2021 at 10:00a.m.',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Play',\n        day: 'Feb 4, 2021 at 1:00p.m. ',\n        reminder: false,\n    }\n])\n\n//Add task\nconst addTask =(task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n//Delete Tasks\nconst deleteTask = (id) => {\n   setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) =>{\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? { ...task, reminder: \n      !task.reminder} : task\n    )\n  )\n}\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask} />  \n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} \n      onDelete={deleteTask} onToggle={toggleReminder}/>) : (\n        'Were all good for today!!'\n        )} \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}